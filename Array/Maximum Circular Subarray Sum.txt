Maximum-Circular-Subarry-Sum

Question Link - https://www.geeksforgeeks.org/maximum-contiguous-circular-sum/

--------------------------------------------------------------------------------
Solution -

#include<bits/stdc++.h>
using namespace std;

int kadane(int arr[],int n){
    int currSum=arr[0];
    int maxSum=arr[0];
    for(int i=1;i<n;i++){
        currSum=max(arr[i],currSum+arr[i]);
        if(maxSum<currSum){
            maxSum=currSum;
        }
    }
    return maxSum;
}

int maximumSum(int arr[],int n){
    int maxKadane=kadane(arr,n);
    int totalSum=0;
    for(int i=0;i<n;i++){
        totalSum+=arr[i];
        arr[i]*=-1;
    }
    int totalKadane=kadane(arr,n);
    return max(maxKadane,totalSum+totalKadane);
}

int main(){
    int arr[]={10, -3, -4, 7, 6, 5, -4, -1};
    int n=sizeof(arr)/sizeof(arr[0]);
    cout<<maximumSum(arr,n)<<endl;
    return 0;
}