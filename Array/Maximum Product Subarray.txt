Maximum Product Subarray

question link - https://www.geeksforgeeks.org/maximum-product-subarray/

-----------------------------------------------------------------------------------
Solution -
#include <bits/stdc++.h>
using namespace std;

int maxSubarrayProduct(int arr[], int n){
    int max_end=1;
    int min_end=1;
    int max_uptill=0;
    int flag=0;
    
    for (int i=0;i<n;i++){
        if (arr[i]==0){
            max_end=1;
            min_end=1;
        }
        else if (arr[i]>0){
            flag=1;
            max_end=max_end*arr[i];
            min_end=min(min_end*arr[i],1);
        }
        else{
            int temp=max_end;
            max_end=max(min_end*arr[i],1);
            min_end=temp*arr[i];
        }
        if(max_uptill<max_end){
            max_uptill=max_end;
        }
    }
    
    if(flag==0 && max_uptill==0){
        return 0;
    }
    return max_uptill;
    
}

int main()
{
    int arr[] = { 1, -2, -3, 0, 7, -8, -2 };
    int n = sizeof(arr) / sizeof(arr[0]);
    cout<<maxSubarrayProduct(arr, n)<<endl;
    return 0;
}