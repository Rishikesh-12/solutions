Question Link - https://practice.geeksforgeeks.org/problems/overlapping-intervals/0#

-------------------------------------------------------------------------------------
Solution - 

#include <bits/stdc++.h>
using namespace std;

struct Interval{
    int start,end;
};

bool compareInterval(Interval i1, Interval i2){
    return(i1.start<i2.start);
}

void mergeInterval(Interval arr[],int n){
    if(n<=0){
        return;
    }
    
    stack<Interval> s;
    
    sort(arr,arr+n,compareInterval);
    
    s.push(arr[0]);
    
    for(int i=1;i<n;i++){
        Interval top =s.top();
        
        if(top.end<arr[i].start){
            s.push(arr[i]);
        }
        else if(top.end<arr[i].end){
            top.end=arr[i].end;
            s.pop();
            s.push(top);
        }
    }
    vector<int> newarr;
    while(!s.empty()){
        Interval t=s.top();
        newarr.push_back(t.start);
        newarr.push_back(t.end);
        s.pop();
    }
    int i=0;
    while(i<newarr.size()){
        cout<<newarr[i]<<" ";
        i++;
    }
    cout<<endl;
    return;
}


int main()
 {
 	int t;
    cin>>t;
    while(t--){
        int n;
        cin>>n;
        Interval arr[n];
        for(int i=0;i<n;i++){
            cin>>arr[i].start>>arr[i].end;
        }
        mergeInterval(arr,n);
    }
    return 0;
}