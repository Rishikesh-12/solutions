Question - Maximum difference between two elements such that larger element appears after the smaller number
Given an array arr[] of integers, find out the difference between any two elements such that larger element 
appears after the smaller number in arr[].

Examples: If array is [2, 3, 10, 6, 4, 8, 1] then returned value should be 8 (Diff between 10 and 2).
 If array is [ 7, 9, 5, 6, 3, 2 ] then returned value should be 2 (Diff between 7 and 9)

question link - https://www.geeksforgeeks.org/maximum-difference-between-two-elements/

-------------------------------------------------------------------------------------------------------------------
Solution- 

#include<bits/stdc++.h>
using namespace std;

int maxdiff(int arr[], int n){
    if(n<=1){
        return 0;
    }
    int small=0;
    int big=0;
    for(int i=1;i<n;i++){
        if(arr[i]<arr[small] && i<big){
            small=i;
        }
        if(arr[i]>arr[big] && i>small){
            big=i;
        }
    }
    return(arr[big]-arr[small]);
}

int main(){
    int n=5;
    int arr[n] = {1, 2, 90, 10, 110};
    cout<<maxdiff(arr,n)<<endl;
    return 0;
}