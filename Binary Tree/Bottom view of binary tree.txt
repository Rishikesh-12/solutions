Question name - Bottom View of Binary Tree

Question - https://practice.geeksforgeeks.org/problems/bottom-view-of-binary-tree/1

--------------------------------------------------------
Solution- 

class QueueNode{
    Node node;
    int hd;
    QueueNode(Node node, int hd){
        this.node = node;
        this.hd = hd;
    }
}

class Solution
{
    //Function to return a list of nodes visible from the bottom view 
    //from left to right in Binary Tree.
    static ArrayList<Integer> bottomView(Node root)
    {
        // add your code
        ArrayList<Integer> arr = new ArrayList<>();
        if(root == null) return arr;
        
        int min=0;
        int max=0;
        
        HashMap<Integer, Integer> map = new HashMap<>();
        Queue<QueueNode> q = new LinkedList<>();
        q.add( new QueueNode(root, 0));
        while(!q.isEmpty()){
            QueueNode curr = q.poll();
            map.put(curr.hd, curr.node.data);
            if(curr.node.left  != null){
                min = Math.min(min, curr.hd-1);
                q.add(new QueueNode(curr.node.left,curr.hd-1));
            }
            if(curr.node.right  != null){
                max = Math.max(max, curr.hd+1);
                q.add(new QueueNode(curr.node.right,curr.hd+1));
            }
        }
        
        for(; min<=max; min++){
            arr.add(map.get(min));
        }
        return arr;
    }
}