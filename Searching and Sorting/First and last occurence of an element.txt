Question - https://practice.geeksforgeeks.org/problems/first-and-last-occurrences-of-x3116/1

---------------------------------------------------------------
Solution-

class GFG
{
    ArrayList<Integer> find(int arr[], int n, int x)
    {
        ArrayList<Integer> result = new ArrayList<>();
        int lb = lowerBound(arr,n,x);
        
        if(lb == n || arr[lb] != x) {
            result.add(-1);
            result.add(-1);
            return result;
        }
        
        int ub = upperBound(arr,n,x);
        
        result.add(lb);
        result.add(ub-1);
        
        return result;
    }
    
    
    int upperBound(int arr[], int n, int x){
        
        int low = 0;
        int high = n-1;
        int ans = n;
        
        while(low <= high){
            int mid = (low+high)/2;
            if(arr[mid]>x){
                ans = mid;
                high = mid - 1;
            }
            else{
                low = mid + 1;
            }
        }
        
        return ans;
    }
    
    int lowerBound(int arr[], int n, int x){
        
        int low = 0;
        int high = n-1;
        int ans = n;
        
        while(low <= high){
            int mid = (low+high)/2;
            if(arr[mid]>=x){
                ans=mid;
                high = mid - 1;
            }
            else{
                low = mid + 1;
            }
        }
        
        return ans;
    }
    
}