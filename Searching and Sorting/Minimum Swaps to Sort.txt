Question name - Minimum Swaps to Sort

Question link - https://practice.geeksforgeeks.org/problems/minimum-swaps/1

------------------------------------------------------------ 
Solution - 

class Pair
{
    int num;
    int idx;
    
    Pair(int num, int idx){
        this.num=num;
        this.idx=idx;
    }
}


class Solution
{
    //Function to find the minimum number of swaps required to sort the array.
    public int minSwaps(int nums[])
    {
        // Code here
        int n = nums.length;
        Pair arr[] = new Pair[n];
        for(int i=0;i<n;i++){
            arr[i] = new Pair(nums[i],i);
        }
        
        Arrays.sort(arr, (a,b) -> a.num - b.num);
        
        int swaps=0;
        for(int i=0;i<n;i++){
            int idx = arr[i].idx;
            if(idx != i){
                // swap(arr[i], arr[idx]);
                Pair temp = arr[i];
                arr[i] = arr[idx];
                arr[idx] = temp;
                swaps++;
                i--; // because the swapped i might not be at correct location
            }
        }
        
        return swaps;
        
    }
}